/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.20
 * Generated at: 2023-03-15 16:51:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.connectionProvider.ConnectionProvider;
import java.sql.*;

public final class Message_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


Connection con;
public void jspInit(){
	
	try{	
		con = ConnectionProvider.getConnection();
	}catch(Exception e){
		System.out.print(e);
	}
}

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/Bootstrap/Bootstrap.jsp", Long.valueOf(1676569842580L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.connectionProvider.ConnectionProvider");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"utf-8\">\r\n");
      out.write("	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"./Bootstrap/css/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"./Bootstrap/js/bootstrap.bundle.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"./Bootstrap/JQuery/jquery-3.2.1.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"./Bootstrap/js/popper.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- <link rel=\"stylesheet\" href=\"./Bootstrap/fontawesome/fontawesome.css\" type=\"text/css\"> -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"./Bootstrap/fontawesome/f-icons.js\" ></script>");
      out.write("\r\n");
      out.write("	<title>Message</title>\r\n");
      out.write("	<style>\r\n");
      out.write("		.msg {\r\n");
      out.write("			color: green;\r\n");
      out.write("		}\r\n");
      out.write("	</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "navbarSecure.jsp", out, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<center><br><br><br>\r\n");
      out.write("		<h4 id=\"msg\" class=\"msg\">");
      out.print(request.getAttribute("Message"));
      out.write("</h4><br><br>\r\n");
      out.write("	</center>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-md-2\"></div>\r\n");
      out.write("			<div class=\"col-md-8\">\r\n");
      out.write("				<table class=\"table table-striped text-center\">\r\n");
      out.write("					<thead>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<th>Subject</th>\r\n");
      out.write("							<th>Year</th>\r\n");
      out.write("							<th>Semester</th>\r\n");
      out.write("							<th>File Name</th>\r\n");
      out.write("							<th>&nbsp;</th>\r\n");
      out.write("							<th>&nbsp;</th>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</thead>\r\n");
      out.write("					<tbody>\r\n");
      out.write("						");

  	String course = request.getParameter("course");
  	int sem = Integer.parseInt(request.getParameter("sem"));

  	try{
  		PreparedStatement pstmt = con.prepareStatement("select * from db where course=? and sem=?");
  		pstmt.setString(1, course);
  		pstmt.setInt(2, sem);
  		ResultSet rs = pstmt.executeQuery();
  		
  		while(rs.next()){
  			String year = rs.getString("year").toUpperCase();
  			String sub = rs.getString("sub").toUpperCase();
  			String c = rs.getString("course");
  			/* int sem = rs.getInt("sem"); */
  			
  			String fileName = rs.getString("fileName");
  			System.out.println(sub);
  		
      out.write("\r\n");
      out.write("\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>");
out.print(sub); 
      out.write("</td>\r\n");
      out.write("							<td>");
out.print(year); 
      out.write("</td>\r\n");
      out.write("							<td>");
out.print(sem); 
      out.write("</td>\r\n");
      out.write("							<td>");
out.print(fileName); 
      out.write("</td>\r\n");
      out.write("							<td>\r\n");
      out.write("								<form action=\"deleteServlet\">\r\n");
      out.write("									<input type=\"text\" name=\"deleteFile\" value=\"");
out.print(fileName);
      out.write("\" hidden>\r\n");
      out.write("									<input type=\"submit\" class=\"btn btn-sm btn-danger\" value=\"Delete\">\r\n");
      out.write("								</form>\r\n");
      out.write("							</td>\r\n");
      out.write("							<td>\r\n");
      out.write("								<form action=\"downloadFiles\" method=\"post\">\r\n");
      out.write("									<input type=\"text\" name=\"uploadFileName\" value=\"");
out.print(fileName);
      out.write("\" hidden>\r\n");
      out.write("									<input type=\"submit\" class=\"btn btn-sm btn-primary\" value=\"Download\">\r\n");
      out.write("								</form>\r\n");
      out.write("							</td>\r\n");
      out.write("\r\n");
      out.write("							<td>\r\n");
      out.write("								<form action=\"FileReadPdf\" method=\"post\">\r\n");
      out.write("									<input type=\"text\" name=\"uploadFileName\" value=\"");
out.print(fileName);
      out.write("\" hidden>\r\n");
      out.write("									<input type=\"submit\" class=\"btn btn-sm btn-warning\" value=\"View\">\r\n");
      out.write("								</form>\r\n");
      out.write("							</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</tbody>\r\n");
      out.write("					");

  	}
  	}catch(Exception e){
  	  	System.out.println(e);
  	}
  
      out.write("\r\n");
      out.write("				</table>\r\n");
      out.write("				<!-- <a href=\"AdminForm.jsp\" class=\"btn btn-sm btn-success\">Add</a> -->\r\n");
      out.write("				<button class=\"btn btn-sm btn-primary\" value=\"Back\" type=\"Button\"\r\n");
      out.write("					onclick=\"history.go(-1);\">BACK</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-md-2\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "navBottom.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("	setTimeout(() => {\r\n");
      out.write("		myFun();\r\n");
      out.write("	}, 2000);\r\n");
      out.write("\r\n");
      out.write("	function myFun() {\r\n");
      out.write("		var x = document.getElementById(\"msg\");\r\n");
      out.write("		x.style.display = \"none\";\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
